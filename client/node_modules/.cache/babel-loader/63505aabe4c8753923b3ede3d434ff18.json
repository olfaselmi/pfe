{"ast":null,"code":"import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// Login Redux States\nimport { AuthLoginActionTypes } from \"./types\";\nimport { authLoginApiResponseSuccess, authLoginApiResponseError } from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport { getFirebaseBackend, setLoggeedInUser } from \"../../../helpers/firebase_helper\";\nimport { getCurrentUser, postFakeLogin, postSocialLogin } from \"../../../api/index\";\nconst fireBaseBackend = getFirebaseBackend();\nfunction* loadCurrentUser() {\n  try {\n    const response = yield call(getCurrentUser);\n    yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOAD_CURRENT_USER, response));\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOAD_CURRENT_USER, error));\n  }\n}\nfunction* loginUser({\n  payload: {\n    user\n  }\n}) {\n  try {\n    const response = yield call(postFakeLogin, {\n      email: user.email,\n      password: user.password\n    });\n    localStorage.setItem(\"authUser\", JSON.stringify(response));\n    setLoggeedInUser(response);\n    yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error));\n  }\n}\nfunction* socialLogin({\n  payload: {\n    data,\n    type\n  }\n}) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      let fireBaseBackend = getFirebaseBackend();\n      const response = yield call(fireBaseBackend.socialLoginUser, data, type);\n      setLoggeedInUser(response);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    } else {\n      const response = yield call(postSocialLogin, data);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response));\n    }\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error));\n  }\n}\nfunction* logoutUser() {\n  try {\n    localStorage.removeItem(\"authUser\");\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response = yield call(fireBaseBackend.logout);\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, response));\n    } else {\n      yield put(authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, true));\n    }\n  } catch (error) {\n    yield put(authLoginApiResponseError(AuthLoginActionTypes.LOGOUT_USER, error));\n  }\n}\nfunction* loginSaga() {\n  yield takeEvery(AuthLoginActionTypes.LOAD_CURRENT_USER, loadCurrentUser);\n  yield takeEvery(AuthLoginActionTypes.LOGIN_USER, loginUser);\n  yield takeEvery(AuthLoginActionTypes.LOGOUT_USER, logoutUser);\n  yield takeLatest(AuthLoginActionTypes.SOCIAL_LOGIN, socialLogin);\n}\nexport default loginSaga;","map":{"version":3,"names":["call","put","takeEvery","takeLatest","AuthLoginActionTypes","authLoginApiResponseSuccess","authLoginApiResponseError","getFirebaseBackend","setLoggeedInUser","getCurrentUser","postFakeLogin","postSocialLogin","fireBaseBackend","loadCurrentUser","response","LOAD_CURRENT_USER","error","loginUser","payload","user","email","password","localStorage","setItem","JSON","stringify","LOGIN_USER","socialLogin","data","type","process","env","REACT_APP_DEFAULTAUTH","socialLoginUser","logoutUser","removeItem","logout","LOGOUT_USER","loginSaga","SOCIAL_LOGIN"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/auth/login/saga.ts"],"sourcesContent":["import { call, put, takeEvery, takeLatest } from \"redux-saga/effects\";\n\n// Login Redux States\nimport { AuthLoginActionTypes } from \"./types\";\nimport {\n  authLoginApiResponseSuccess,\n  authLoginApiResponseError,\n} from \"./actions\";\n\n//Include Both Helper File with needed methods\nimport {\n  getFirebaseBackend,\n  setLoggeedInUser,\n} from \"../../../helpers/firebase_helper\";\nimport {\n  getCurrentUser,\n  postFakeLogin,\n  postJwtLogin,\n  postSocialLogin,\n} from \"../../../api/index\";\n\nconst fireBaseBackend = getFirebaseBackend();\n\nfunction* loadCurrentUser() {\n  try {\n    const response: Promise<any> = yield call(getCurrentUser);\n    yield put(\n      authLoginApiResponseSuccess(\n        AuthLoginActionTypes.LOAD_CURRENT_USER,\n        response\n      )\n    );\n  } catch (error: any) {\n    yield put(\n      authLoginApiResponseError(AuthLoginActionTypes.LOAD_CURRENT_USER, error)\n    );\n  }\n}\n\nfunction* loginUser({ payload: { user } }: any) {\n  try {\n    const response: Promise<String> = yield call(postFakeLogin, {\n      email: user.email,\n      password: user.password,\n    });\n\n    localStorage.setItem(\"authUser\", JSON.stringify(response) );\n    setLoggeedInUser(response);\n    yield put(\n      authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\n    );\n  } catch (error: any) {\n    yield put(\n      authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error)\n    );\n  }\n}\n\nfunction* socialLogin({ payload: { data, type } }: any) {\n  try {\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      let fireBaseBackend = getFirebaseBackend();\n      const response: Promise<any> = yield call(\n        fireBaseBackend.socialLoginUser,\n        data,\n        type\n      );\n      setLoggeedInUser(response);\n      yield put(\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\n      );\n    } else {\n      const response: Promise<any> = yield call(postSocialLogin, data);\n      yield put(\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGIN_USER, response)\n      );\n    }\n  } catch (error: any) {\n    yield put(\n      authLoginApiResponseError(AuthLoginActionTypes.LOGIN_USER, error)\n    );\n  }\n}\n\nfunction* logoutUser() {\n  try {\n    localStorage.removeItem(\"authUser\");\n    if (process.env.REACT_APP_DEFAULTAUTH === \"firebase\") {\n      const response: Promise<any> = yield call(fireBaseBackend.logout);\n      yield put(\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, response)\n      );\n    } else {\n      yield put(\n        authLoginApiResponseSuccess(AuthLoginActionTypes.LOGOUT_USER, true)\n      );\n    }\n  } catch (error: any) {\n    yield put(\n      authLoginApiResponseError(AuthLoginActionTypes.LOGOUT_USER, error)\n    );\n  }\n}\n\nfunction* loginSaga() {\n  yield takeEvery(AuthLoginActionTypes.LOAD_CURRENT_USER, loadCurrentUser);\n  yield takeEvery(AuthLoginActionTypes.LOGIN_USER, loginUser);\n  yield takeEvery(AuthLoginActionTypes.LOGOUT_USER, logoutUser);\n  yield takeLatest(AuthLoginActionTypes.SOCIAL_LOGIN, socialLogin);\n}\n\nexport default loginSaga;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}