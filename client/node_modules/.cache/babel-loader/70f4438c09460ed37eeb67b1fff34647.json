{"ast":null,"code":"import { ChatsActionTypes } from \"./types\";\n\n// common success\nexport const chatsApiResponseSuccess = (actionType, data) => ({\n  type: ChatsActionTypes.API_RESPONSE_SUCCESS,\n  payload: {\n    actionType,\n    data\n  }\n});\n// common error\nexport const chatsApiResponseError = (actionType, error) => ({\n  type: ChatsActionTypes.API_RESPONSE_ERROR,\n  payload: {\n    actionType,\n    error\n  }\n});\nexport const getFavourites = () => ({\n  type: ChatsActionTypes.GET_FAVOURITES\n});\nexport const getDirectMessages = () => ({\n  type: ChatsActionTypes.GET_DIRECT_MESSAGES\n});\nexport const getChannels = () => ({\n  type: ChatsActionTypes.GET_CHANNELS\n});\nexport const addContacts = contacts => ({\n  type: ChatsActionTypes.ADD_CONTACTS,\n  payload: contacts\n});\nexport const createChannel = channelData => ({\n  type: ChatsActionTypes.CREATE_CHANNEL,\n  payload: channelData\n});\nexport const changeSelectedChat = selectedChat => ({\n  type: ChatsActionTypes.CHANGE_SELECTED_CHAT,\n  payload: selectedChat\n});\nexport const getChatUserDetails = selectedChat => ({\n  type: ChatsActionTypes.GET_CHAT_USER_DETAILS,\n  payload: selectedChat\n});\nexport const getChatUserConversations = selectedChat => ({\n  type: ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS,\n  payload: selectedChat\n});\nexport const addChatUserConversations = data => ({\n  type: ChatsActionTypes.ADD_MESSAGE,\n  payload: data\n});\nexport const toggleUserDetailsTab = value => ({\n  type: ChatsActionTypes.TOGGLE_USER_DETAILS_TAB,\n  payload: value\n});\nexport const onSendMessage = data => ({\n  type: ChatsActionTypes.ON_SEND_MESSAGE,\n  payload: data\n});\nexport const receiveMessage = id => ({\n  type: ChatsActionTypes.RECEIVE_MESSAGE,\n  payload: id\n});\nexport const readMessage = id => ({\n  type: ChatsActionTypes.READ_MESSAGE,\n  payload: id\n});\nexport const receiveMessageFromUser = id => ({\n  type: ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER,\n  payload: id\n});\nexport const deleteMessage = (userId, messageId) => ({\n  type: ChatsActionTypes.DELETE_MESSAGE,\n  payload: {\n    userId,\n    messageId\n  }\n});\nexport const forwardMessage = data => ({\n  type: ChatsActionTypes.FORWARD_MESSAGE,\n  payload: data\n});\nexport const deleteUserMessages = userId => ({\n  type: ChatsActionTypes.DELETE_USER_MESSAGES,\n  payload: userId\n});\nexport const getChannelDetails = id => ({\n  type: ChatsActionTypes.GET_CHANNEL_DETAILS,\n  payload: id\n});\nexport const toggleFavouriteContact = id => ({\n  type: ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT,\n  payload: id\n});\nexport const getArchiveContact = () => ({\n  type: ChatsActionTypes.GET_ARCHIVE_CONTACT\n});\nexport const toggleArchiveContact = id => ({\n  type: ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT,\n  payload: id\n});\nexport const readConversation = id => ({\n  type: ChatsActionTypes.READ_CONVERSATION,\n  payload: id\n});\nexport const deleteImage = (userId, messageId, imageId) => ({\n  type: ChatsActionTypes.DELETE_IMAGE,\n  payload: {\n    userId,\n    messageId,\n    imageId\n  }\n});","map":{"version":3,"names":["ChatsActionTypes","chatsApiResponseSuccess","actionType","data","type","API_RESPONSE_SUCCESS","payload","chatsApiResponseError","error","API_RESPONSE_ERROR","getFavourites","GET_FAVOURITES","getDirectMessages","GET_DIRECT_MESSAGES","getChannels","GET_CHANNELS","addContacts","contacts","ADD_CONTACTS","createChannel","channelData","CREATE_CHANNEL","changeSelectedChat","selectedChat","CHANGE_SELECTED_CHAT","getChatUserDetails","GET_CHAT_USER_DETAILS","getChatUserConversations","GET_CHAT_USER_CONVERSATIONS","addChatUserConversations","ADD_MESSAGE","toggleUserDetailsTab","value","TOGGLE_USER_DETAILS_TAB","onSendMessage","ON_SEND_MESSAGE","receiveMessage","id","RECEIVE_MESSAGE","readMessage","READ_MESSAGE","receiveMessageFromUser","RECEIVE_MESSAGE_FROM_USER","deleteMessage","userId","messageId","DELETE_MESSAGE","forwardMessage","FORWARD_MESSAGE","deleteUserMessages","DELETE_USER_MESSAGES","getChannelDetails","GET_CHANNEL_DETAILS","toggleFavouriteContact","TOGGLE_FAVOURITE_CONTACT","getArchiveContact","GET_ARCHIVE_CONTACT","toggleArchiveContact","TOGGLE_ARCHIVE_CONTACT","readConversation","READ_CONVERSATION","deleteImage","imageId","DELETE_IMAGE"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/chats/actions.ts"],"sourcesContent":["import { ChatsActionTypes } from \"./types\";\n\n// common success\nexport const chatsApiResponseSuccess = (actionType: string, data: any) => ({\n  type: ChatsActionTypes.API_RESPONSE_SUCCESS,\n  payload: { actionType, data },\n});\n// common error\nexport const chatsApiResponseError = (actionType: string, error: string) => ({\n  type: ChatsActionTypes.API_RESPONSE_ERROR,\n  payload: { actionType, error },\n});\n\nexport const getFavourites = () => ({\n  type: ChatsActionTypes.GET_FAVOURITES,\n});\n\nexport const getDirectMessages = () => ({\n  type: ChatsActionTypes.GET_DIRECT_MESSAGES,\n});\n\nexport const getChannels = () => ({\n  type: ChatsActionTypes.GET_CHANNELS,\n});\n\nexport const addContacts = (contacts: Array<string | number>) => ({\n  type: ChatsActionTypes.ADD_CONTACTS,\n  payload: contacts,\n});\n\nexport interface CreateChannelPostData {\n  name: string;\n  members: Array<string | number>;\n  description?: string;\n}\nexport const createChannel = (channelData: CreateChannelPostData) => ({\n  type: ChatsActionTypes.CREATE_CHANNEL,\n  payload: channelData,\n});\n\nexport const changeSelectedChat = (selectedChat: string | number | null) => ({\n  type: ChatsActionTypes.CHANGE_SELECTED_CHAT,\n  payload: selectedChat,\n});\n\nexport const getChatUserDetails = (selectedChat: string | number | null) => ({\n  type: ChatsActionTypes.GET_CHAT_USER_DETAILS,\n  payload: selectedChat,\n});\n\nexport const getChatUserConversations = (\n  selectedChat: string | number | null | any\n) => ({\n  type: ChatsActionTypes.GET_CHAT_USER_CONVERSATIONS,\n  payload: selectedChat,\n});\n\nexport const addChatUserConversations = (\n  data: string | number | null | any\n) => ({\n  type: ChatsActionTypes.ADD_MESSAGE,\n  payload: data,\n});\n\nexport const toggleUserDetailsTab = (value: boolean) => ({\n  type: ChatsActionTypes.TOGGLE_USER_DETAILS_TAB,\n  payload: value,\n});\n\nexport const onSendMessage = (data: any) => ({\n  type: ChatsActionTypes.ON_SEND_MESSAGE,\n  payload: data,\n});\n\nexport const receiveMessage = (id: number | string) => ({\n  type: ChatsActionTypes.RECEIVE_MESSAGE,\n  payload: id,\n});\n\nexport const readMessage = (id: number | string) => ({\n  type: ChatsActionTypes.READ_MESSAGE,\n  payload: id,\n});\n\nexport const receiveMessageFromUser = (id: number | string) => ({\n  type: ChatsActionTypes.RECEIVE_MESSAGE_FROM_USER,\n  payload: id,\n});\n\nexport const deleteMessage = (\n  userId: number | string,\n  messageId: number | string\n) => ({\n  type: ChatsActionTypes.DELETE_MESSAGE,\n  payload: { userId, messageId },\n});\n\nexport const forwardMessage = (data: object) => ({\n  type: ChatsActionTypes.FORWARD_MESSAGE,\n  payload: data,\n});\n\nexport const deleteUserMessages = (userId: number | string) => ({\n  type: ChatsActionTypes.DELETE_USER_MESSAGES,\n  payload: userId,\n});\n\nexport const getChannelDetails = (id: number | string) => ({\n  type: ChatsActionTypes.GET_CHANNEL_DETAILS,\n  payload: id,\n});\n\nexport const toggleFavouriteContact = (id: number | string) => ({\n  type: ChatsActionTypes.TOGGLE_FAVOURITE_CONTACT,\n  payload: id,\n});\n\nexport const getArchiveContact = () => ({\n  type: ChatsActionTypes.GET_ARCHIVE_CONTACT,\n});\n\nexport const toggleArchiveContact = (id: number | string) => ({\n  type: ChatsActionTypes.TOGGLE_ARCHIVE_CONTACT,\n  payload: id,\n});\n\nexport const readConversation = (id: number | string) => ({\n  type: ChatsActionTypes.READ_CONVERSATION,\n  payload: id,\n});\n\nexport const deleteImage = (\n  userId: number | string,\n  messageId: number | string,\n  imageId: number | string\n) => ({\n  type: ChatsActionTypes.DELETE_IMAGE,\n  payload: { userId, messageId, imageId },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}