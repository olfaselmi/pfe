{"ast":null,"code":"var _jsxFileName = \"/home/olfa/Documents/pfe-main/client/src/context/SocketContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SocketContext = /*#__PURE__*/createContext();\nconst socket = io(\"http://localhost:5000/\");\nconst ContextProvider = ({\n  children\n}) => {\n  _s();\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState(\"\");\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n  useEffect(() => {\n    // navigator.mediaDevices\n    //   .getUserMedia({ video: true, audio: true })\n    //   .then((currentStream) => {\n    //     setStream(currentStream);\n\n    //     myVideo.current.srcObject = currentStream;\n    //   });\n\n    // socket.on(\"me\", (id) => setMe(id));\n\n    // socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\n    //   setCall({ isReceivingCall: true, from, name: callerName, signal });\n    // });\n  }, []);\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({\n      initiator: false,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"answerCall\", {\n        signal: data,\n        to: call.from\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    peer.signal(call.signal);\n    connectionRef.current = peer;\n  };\n  const callUser = id => {\n    const peer = new Peer({\n      initiator: true,\n      trickle: false,\n      stream\n    });\n    peer.on(\"signal\", data => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name\n      });\n    });\n    peer.on(\"stream\", currentStream => {\n      userVideo.current.srcObject = currentStream;\n    });\n    socket.on(\"callAccepted\", signal => {\n      setCallAccepted(true);\n      peer.signal(signal);\n    });\n    connectionRef.current = peer;\n  };\n  const leaveCall = () => {\n    setCallEnded(true);\n    connectionRef.current.destroy();\n    window.location.reload();\n  };\n  return /*#__PURE__*/_jsxDEV(SocketContext.Provider, {\n    value: {\n      call,\n      callAccepted,\n      myVideo,\n      userVideo,\n      stream,\n      name,\n      setName,\n      callEnded,\n      me,\n      callUser,\n      leaveCall,\n      answerCall\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n_s(ContextProvider, \"1tPo1ef3MpDHdfJxc3sbs1MH13I=\");\n_c = ContextProvider;\nexport { ContextProvider, SocketContext };\nvar _c;\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["React","createContext","useState","useRef","useEffect","io","Peer","jsxDEV","_jsxDEV","SocketContext","socket","ContextProvider","children","_s","callAccepted","setCallAccepted","callEnded","setCallEnded","stream","setStream","name","setName","call","setCall","me","setMe","myVideo","userVideo","connectionRef","answerCall","peer","initiator","trickle","on","data","emit","signal","to","from","currentStream","current","srcObject","callUser","id","userToCall","signalData","leaveCall","destroy","window","location","reload","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/context/SocketContext.js"],"sourcesContent":["import React, { createContext, useState, useRef, useEffect } from \"react\";\nimport { io } from \"socket.io-client\";\nimport Peer from \"simple-peer\";\n\nconst SocketContext = createContext();\n\nconst socket = io(\"http://localhost:5000/\");\n\nconst ContextProvider = ({ children }) => {\n  const [callAccepted, setCallAccepted] = useState(false);\n  const [callEnded, setCallEnded] = useState(false);\n  const [stream, setStream] = useState();\n  const [name, setName] = useState(\"\");\n  const [call, setCall] = useState({});\n  const [me, setMe] = useState(\"\");\n\n  const myVideo = useRef();\n  const userVideo = useRef();\n  const connectionRef = useRef();\n\n  useEffect(() => {\n    // navigator.mediaDevices\n    //   .getUserMedia({ video: true, audio: true })\n    //   .then((currentStream) => {\n    //     setStream(currentStream);\n\n    //     myVideo.current.srcObject = currentStream;\n    //   });\n\n    // socket.on(\"me\", (id) => setMe(id));\n\n    // socket.on(\"callUser\", ({ from, name: callerName, signal }) => {\n    //   setCall({ isReceivingCall: true, from, name: callerName, signal });\n    // });\n  }, []);\n\n  const answerCall = () => {\n    setCallAccepted(true);\n    const peer = new Peer({ initiator: false, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"answerCall\", { signal: data, to: call.from });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    peer.signal(call.signal);\n\n    connectionRef.current = peer;\n  };\n\n  const callUser = (id) => {\n    const peer = new Peer({ initiator: true, trickle: false, stream });\n\n    peer.on(\"signal\", (data) => {\n      socket.emit(\"callUser\", {\n        userToCall: id,\n        signalData: data,\n        from: me,\n        name,\n      });\n    });\n\n    peer.on(\"stream\", (currentStream) => {\n      userVideo.current.srcObject = currentStream;\n    });\n\n    socket.on(\"callAccepted\", (signal) => {\n      setCallAccepted(true);\n\n      peer.signal(signal);\n    });\n\n    connectionRef.current = peer;\n  };\n\n  const leaveCall = () => {\n    setCallEnded(true);\n\n    connectionRef.current.destroy();\n\n    window.location.reload();\n  };\n\n  return (\n    <SocketContext.Provider\n      value={{\n        call,\n        callAccepted,\n        myVideo,\n        userVideo,\n        stream,\n        name,\n        setName,\n        callEnded,\n        me,\n        callUser,\n        leaveCall,\n        answerCall,\n      }}\n    >\n      {children}\n    </SocketContext.Provider>\n  );\n};\n\nexport { ContextProvider, SocketContext };"],"mappings":"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"},"metadata":{},"sourceType":"module"}