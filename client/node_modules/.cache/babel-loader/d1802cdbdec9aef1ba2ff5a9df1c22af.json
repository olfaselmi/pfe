{"ast":null,"code":"var _jsxFileName = \"/home/olfa/Documents/pfe-main/client/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\n\n// scss\nimport \"./assets/scss/theme.scss\";\n\n// actions\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changelayoutMode, getProfileDetails, loadCurrentUser } from \"./redux/actions\";\n\n//Route\nimport Routes from \"./routes\";\n\n// Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\n\n//api config\n// import config from \"./config\";\nimport fakeBackend from \"./helpers/fakeBackend\";\n\n// TODO\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfakeBackend();\n\n// const firebaseConfig = {\n//   apiKey: config.FIRE_BASE.API_KEY,\n//   authDomain: config.FIRE_BASE.AUTH_DOMAIN,\n//   databaseURL: config.FIRE_BASE.DATABASEURL,\n//   projectId: config.FIRE_BASE.PROJECTID,\n//   storageBucket: config.FIRE_BASE.STORAGEBUCKET,\n//   messagingSenderId: config.FIRE_BASE.MESSAGINGSENDERID,\n//   appId: config.FIRE_BASE.APPID,\n//   measurementId: config.FIRE_BASE.MEASUREMENTID,\n// };\n\n// // init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nconst App = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    layoutMode\n  } = useSelector(state => ({\n    layoutMode: state.Layout.layoutMode\n  }));\n\n  // Dark/Light Mode \n  useEffect(() => {\n    const token = localStorage.getItem(\"authUser\");\n    if (JSON.parse(token)) {\n      dispatch(loadCurrentUser());\n      dispatch(getProfileDetails());\n    }\n    var getLayoutMode = localStorage.getItem(\"layoutMode\");\n    if (getLayoutMode) {\n      dispatch(changelayoutMode(getLayoutMode));\n    } else {\n      dispatch(changelayoutMode(layoutMode));\n    }\n  }, [layoutMode, dispatch]);\n  return /*#__PURE__*/_jsxDEV(Routes, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 10\n  }, this);\n};\n_s(App, \"Kkm7420McVur4sWZOLyFlL7hsdg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useEffect","useSelector","useDispatch","changelayoutMode","getProfileDetails","loadCurrentUser","Routes","fakeBackend","jsxDEV","_jsxDEV","App","_s","dispatch","layoutMode","state","Layout","token","localStorage","getItem","JSON","parse","getLayoutMode","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/App.tsx"],"sourcesContent":["import React, { useEffect } from \"react\";\n\n// scss\nimport \"./assets/scss/theme.scss\";\n\n// actions\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { changelayoutMode, getProfileDetails, loadCurrentUser } from \"./redux/actions\";\n\n//Route\nimport Routes from \"./routes\";\n\n// Import Firebase Configuration file\n// import { initFirebaseBackend } from \"./helpers/firebase_helper\";\n\n//api config\n// import config from \"./config\";\nimport fakeBackend from \"./helpers/fakeBackend\";\n\n\n// TODO\nfakeBackend();\n\n// const firebaseConfig = {\n//   apiKey: config.FIRE_BASE.API_KEY,\n//   authDomain: config.FIRE_BASE.AUTH_DOMAIN,\n//   databaseURL: config.FIRE_BASE.DATABASEURL,\n//   projectId: config.FIRE_BASE.PROJECTID,\n//   storageBucket: config.FIRE_BASE.STORAGEBUCKET,\n//   messagingSenderId: config.FIRE_BASE.MESSAGINGSENDERID,\n//   appId: config.FIRE_BASE.APPID,\n//   measurementId: config.FIRE_BASE.MEASUREMENTID,\n// };\n\n// // init firebase backend\n// initFirebaseBackend(firebaseConfig);\n\nconst App = () => {\n  const dispatch = useDispatch();\n\n  const { layoutMode } = useSelector((state: any) => ({\n    layoutMode: state.Layout.layoutMode,\n  }));\n\n  // Dark/Light Mode \n  useEffect(() => {\n    const token :  any = localStorage.getItem(\"authUser\");\n    if(JSON.parse(token)){\n      dispatch(loadCurrentUser())\n      dispatch(getProfileDetails())\n    }\n    var getLayoutMode = localStorage.getItem(\"layoutMode\");\n    if (getLayoutMode) {\n      dispatch(changelayoutMode(getLayoutMode));\n    } else {\n      dispatch(changelayoutMode(layoutMode));\n    }\n  }, [layoutMode, dispatch]);\n\n  return <Routes />;\n};\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;;AAExC;AACA,OAAO,0BAA0B;;AAEjC;AACA,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,gBAAgB,EAAEC,iBAAiB,EAAEC,eAAe,QAAQ,iBAAiB;;AAEtF;AACA,OAAOC,MAAM,MAAM,UAAU;;AAE7B;AACA;;AAEA;AACA;AACA,OAAOC,WAAW,MAAM,uBAAuB;;AAG/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAF,WAAW,CAAC,CAAC;;AAEb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAMC,QAAQ,GAAGV,WAAW,CAAC,CAAC;EAE9B,MAAM;IAAEW;EAAW,CAAC,GAAGZ,WAAW,CAAEa,KAAU,KAAM;IAClDD,UAAU,EAAEC,KAAK,CAACC,MAAM,CAACF;EAC3B,CAAC,CAAC,CAAC;;EAEH;EACAb,SAAS,CAAC,MAAM;IACd,MAAMgB,KAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IACrD,IAAGC,IAAI,CAACC,KAAK,CAACJ,KAAK,CAAC,EAAC;MACnBJ,QAAQ,CAACP,eAAe,CAAC,CAAC,CAAC;MAC3BO,QAAQ,CAACR,iBAAiB,CAAC,CAAC,CAAC;IAC/B;IACA,IAAIiB,aAAa,GAAGJ,YAAY,CAACC,OAAO,CAAC,YAAY,CAAC;IACtD,IAAIG,aAAa,EAAE;MACjBT,QAAQ,CAACT,gBAAgB,CAACkB,aAAa,CAAC,CAAC;IAC3C,CAAC,MAAM;MACLT,QAAQ,CAACT,gBAAgB,CAACU,UAAU,CAAC,CAAC;IACxC;EACF,CAAC,EAAE,CAACA,UAAU,EAAED,QAAQ,CAAC,CAAC;EAE1B,oBAAOH,OAAA,CAACH,MAAM;IAAAgB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AACnB,CAAC;AAACd,EAAA,CAvBID,GAAG;EAAA,QACUR,WAAW,EAELD,WAAW;AAAA;AAAAyB,EAAA,GAH9BhB,GAAG;AAyBT,eAAeA,GAAG;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}