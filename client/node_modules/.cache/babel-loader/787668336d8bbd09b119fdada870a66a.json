{"ast":null,"code":"var _jsxFileName = \"/home/olfa/Documents/pfe-main/client/src/pages/Dashboard/Settings/ThemeImage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\n\n// interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst changeImage = id => {\n  const element = document.getElementById(`image-${id}`);\n  if (element) {\n    const image = window.getComputedStyle(element, null).getPropertyValue(\"background-image\");\n    const userChat = document.getElementById(\"user-chat\");\n    if (userChat) {\n      userChat.style.backgroundImage = image;\n    }\n  }\n};\nconst FormCheck = ({\n  image,\n  selected,\n  onChange\n}) => {\n  const checked = selected && selected.id === image.id ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-check\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      className: \"form-check-input theme-img\",\n      type: \"radio\",\n      name: \"bgimg-radio\",\n      id: image.id,\n      onChange: () => {\n        onChange(image);\n      },\n      checked: checked\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      className: \"form-check-label avatar-xs\",\n      htmlFor: image.id,\n      children: /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classnames(\"avatar-title\", \"rounded-circle\", \"theme-btn\", [image.pattern], [image.id]),\n        id: `image-${image.id}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_c = FormCheck;\nconst ThemeImage = ({\n  theme,\n  onChangeData\n}) => {\n  _s();\n  const [themeImages] = useState([{\n    id: \"bgimg-radio1\",\n    pattern: \"bg-pattern-1\"\n  }, {\n    id: \"bgimg-radio2\",\n    pattern: \"bg-pattern-2\"\n  }, {\n    id: \"bgimg-radio3\",\n    pattern: \"bg-pattern-3\"\n  }, {\n    id: \"bgimg-radio4\",\n    pattern: \"bg-pattern-4\"\n  }, {\n    id: \"bgimg-radio5\",\n    pattern: \"bg-pattern-5\"\n  }, {\n    id: \"bgimg-radio6\",\n    pattern: \"bg-pattern-6\"\n  }, {\n    id: \"bgimg-radio7\",\n    pattern: \"bg-pattern-7\"\n  }, {\n    id: \"bgimg-radio8\",\n    pattern: \"bg-pattern-8\"\n  }, {\n    id: \"bgimg-radio9\",\n    pattern: \"bg-pattern-9\"\n  }]);\n  const [selected, setSelected] = useState(null);\n  const onChangeThemeColor = image => {\n    setSelected(image);\n    onChangeData(\"theme\", {\n      ...theme,\n      image: image.id\n    });\n  };\n  useEffect(() => {\n    if (theme && theme.image) {\n      const userTheme = themeImages.find(c => c.id === theme.image);\n      if (userTheme) {\n        setSelected(userTheme);\n      }\n    }\n  }, [theme, themeImages]);\n  useEffect(() => {\n    if (selected !== null) {\n      changeImage(selected.id);\n    }\n  }, [selected]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mt-4 pt-2\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"mb-3 font-size-11 text-muted text-uppercase\",\n      children: \"Choose Theme Image :\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"d-flex align-items-center flex-wrap gap-2 theme-btn-list theme-btn-list-img\",\n      children: (themeImages || []).map((image, key) => /*#__PURE__*/_jsxDEV(FormCheck, {\n        image: image,\n        selected: selected,\n        onChange: onChangeThemeColor\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(ThemeImage, \"Q+fm8pjZUnHi4Vuqv7YxyaqN3fU=\");\n_c2 = ThemeImage;\nexport default ThemeImage;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormCheck\");\n$RefreshReg$(_c2, \"ThemeImage\");","map":{"version":3,"names":["React","useEffect","useState","classnames","jsxDEV","_jsxDEV","changeImage","id","element","document","getElementById","image","window","getComputedStyle","getPropertyValue","userChat","style","backgroundImage","FormCheck","selected","onChange","checked","className","children","type","name","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","pattern","_c","ThemeImage","theme","onChangeData","_s","themeImages","setSelected","onChangeThemeColor","userTheme","find","c","map","key","_c2","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/pages/Dashboard/Settings/ThemeImage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport classnames from \"classnames\";\n\n// interface\nimport { ThemeTypes } from \"../../../data/settings\";\n\nconst changeImage = (id: string) => {\n  const element = document.getElementById(`image-${id}`);\n  if (element) {\n    const image = window\n      .getComputedStyle(element, null)\n      .getPropertyValue(\"background-image\");\n    const userChat = document.getElementById(\"user-chat\");\n    if (userChat) {\n      userChat.style.backgroundImage = image;\n    }\n  }\n};\n\ninterface ThemeImageTypes {\n  id: string;\n  pattern: string;\n}\n\ninterface FormCheckProps {\n  image: ThemeImageTypes;\n  selected: ThemeImageTypes | null;\n  onChange: (color: ThemeImageTypes) => void;\n}\nconst FormCheck = ({ image, selected, onChange }: FormCheckProps) => {\n  const checked = selected && selected.id === image.id ? true : false;\n  return (\n    <div className=\"form-check\">\n      <input\n        className=\"form-check-input theme-img\"\n        type=\"radio\"\n        name=\"bgimg-radio\"\n        id={image.id}\n        onChange={() => {\n          onChange(image);\n        }}\n        checked={checked}\n      />\n      <label className=\"form-check-label avatar-xs\" htmlFor={image.id}>\n        <span\n          className={classnames(\n            \"avatar-title\",\n            \"rounded-circle\",\n            \"theme-btn\",\n            [image.pattern],\n            [image.id]\n          )}\n          id={`image-${image.id}`}\n        ></span>\n      </label>\n    </div>\n  );\n};\n\ninterface ThemeImageProps {\n  theme: ThemeTypes;\n  onChangeData: (field: string, value: any) => void;\n}\n\nconst ThemeImage = ({ theme, onChangeData }: ThemeImageProps) => {\n  const [themeImages] = useState<ThemeImageTypes[]>([\n    {\n      id: \"bgimg-radio1\",\n      pattern: \"bg-pattern-1\",\n    },\n    {\n      id: \"bgimg-radio2\",\n      pattern: \"bg-pattern-2\",\n    },\n    {\n      id: \"bgimg-radio3\",\n      pattern: \"bg-pattern-3\",\n    },\n    {\n      id: \"bgimg-radio4\",\n      pattern: \"bg-pattern-4\",\n    },\n    {\n      id: \"bgimg-radio5\",\n      pattern: \"bg-pattern-5\",\n    },\n    {\n      id: \"bgimg-radio6\",\n      pattern: \"bg-pattern-6\",\n    },\n    {\n      id: \"bgimg-radio7\",\n      pattern: \"bg-pattern-7\",\n    },\n    {\n      id: \"bgimg-radio8\",\n      pattern: \"bg-pattern-8\",\n    },\n    {\n      id: \"bgimg-radio9\",\n      pattern: \"bg-pattern-9\",\n    },\n  ]);\n\n  const [selected, setSelected] = useState<ThemeImageTypes | null>(null);\n  const onChangeThemeColor = (image: ThemeImageTypes) => {\n    setSelected(image);\n    onChangeData(\"theme\", { ...theme, image: image.id });\n  };\n  useEffect(() => {\n    if (theme && theme.image) {\n      const userTheme = themeImages.find(\n        (c: ThemeImageTypes) => c.id === theme.image\n      );\n      if (userTheme) {\n        setSelected(userTheme);\n      }\n    }\n  }, [theme, themeImages]);\n\n  useEffect(() => {\n    if (selected !== null) {\n      changeImage(selected.id);\n    }\n  }, [selected]);\n\n  return (\n    <div className=\"mt-4 pt-2\">\n      <h5 className=\"mb-3 font-size-11 text-muted text-uppercase\">\n        Choose Theme Image :\n      </h5>\n      <div className=\"d-flex align-items-center flex-wrap gap-2 theme-btn-list theme-btn-list-img\">\n        {(themeImages || []).map((image: ThemeImageTypes, key: number) => (\n          <FormCheck\n            image={image}\n            key={key}\n            selected={selected}\n            onChange={onChangeThemeColor}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default ThemeImage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}