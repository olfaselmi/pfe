{"ast":null,"code":"import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n//  Redux States\nimport { ContactsActionTypes } from \"./types\";\nimport { contactsApiResponseSuccess, contactsApiResponseError } from \"./actions\";\n\n// api\nimport { getContacts as getContactsApi, inviteContact as inviteContactApi } from \"../../api/index\";\n\n// helpers\nimport { showSuccessNotification, showErrorNotification } from \"../../helpers/notifications\";\nfunction* getContacts({\n  payload: filters\n}) {\n  try {\n    const response = yield call(getContactsApi, filters);\n    yield put(contactsApiResponseSuccess(ContactsActionTypes.GET_CONTACTS, response));\n  } catch (error) {\n    yield put(contactsApiResponseError(ContactsActionTypes.GET_CONTACTS, error));\n  }\n}\nfunction* inviteContact({\n  payload: formData\n}) {\n  try {\n    const response = yield call(inviteContactApi, formData);\n    yield put(contactsApiResponseSuccess(ContactsActionTypes.INVITE_CONTACT, response));\n    yield call(showSuccessNotification, JSON.parse(JSON.stringify(response)).message + \"\");\n  } catch (error) {\n    yield call(showErrorNotification, error);\n    yield put(contactsApiResponseError(ContactsActionTypes.INVITE_CONTACT, error));\n  }\n}\nexport function* watchGetContacts() {\n  yield takeEvery(ContactsActionTypes.GET_CONTACTS, getContacts);\n}\nexport function* watchInviteContact() {\n  yield takeEvery(ContactsActionTypes.INVITE_CONTACT, inviteContact);\n}\nfunction* contactsSaga() {\n  yield all([fork(watchGetContacts), fork(watchInviteContact)]);\n}\nexport default contactsSaga;","map":{"version":3,"names":["takeEvery","fork","put","all","call","ContactsActionTypes","contactsApiResponseSuccess","contactsApiResponseError","getContacts","getContactsApi","inviteContact","inviteContactApi","showSuccessNotification","showErrorNotification","payload","filters","response","GET_CONTACTS","error","formData","INVITE_CONTACT","JSON","parse","stringify","message","watchGetContacts","watchInviteContact","contactsSaga"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/contacts/saga.ts"],"sourcesContent":["import { takeEvery, fork, put, all, call } from \"redux-saga/effects\";\n\n//  Redux States\nimport { ContactsActionTypes } from \"./types\";\nimport {\n  contactsApiResponseSuccess,\n  contactsApiResponseError,\n} from \"./actions\";\n\n// api\nimport {\n  getContacts as getContactsApi,\n  inviteContact as inviteContactApi,\n} from \"../../api/index\";\n\n// helpers\nimport {\n  showSuccessNotification,\n  showErrorNotification,\n} from \"../../helpers/notifications\";\n\nfunction* getContacts({ payload: filters }: any) {\n  try {\n    const response: Promise<any> = yield call(getContactsApi, filters);\n    yield put(\n      contactsApiResponseSuccess(ContactsActionTypes.GET_CONTACTS, response)\n    );\n  } catch (error: any) {\n    yield put(\n      contactsApiResponseError(ContactsActionTypes.GET_CONTACTS, error)\n    );\n  }\n}\n\nfunction* inviteContact({ payload: formData }: any) {\n  try {\n    const response: Promise<any> = yield call(inviteContactApi, formData);\n    yield put(\n      contactsApiResponseSuccess(ContactsActionTypes.INVITE_CONTACT, response)\n    );\n    yield call(showSuccessNotification, JSON.parse(JSON.stringify(response)).message + \"\");\n  } catch (error: any) {\n    yield call(showErrorNotification, error);\n    yield put(\n      contactsApiResponseError(ContactsActionTypes.INVITE_CONTACT, error)\n    );\n  }\n}\n\nexport function* watchGetContacts() {\n  yield takeEvery(ContactsActionTypes.GET_CONTACTS, getContacts);\n}\n\nexport function* watchInviteContact() {\n  yield takeEvery(ContactsActionTypes.INVITE_CONTACT, inviteContact);\n}\n\nfunction* contactsSaga() {\n  yield all([fork(watchGetContacts), fork(watchInviteContact)]);\n}\n\nexport default contactsSaga;\n"],"mappings":"AAAA,SAASA,SAAS,EAAEC,IAAI,EAAEC,GAAG,EAAEC,GAAG,EAAEC,IAAI,QAAQ,oBAAoB;;AAEpE;AACA,SAASC,mBAAmB,QAAQ,SAAS;AAC7C,SACEC,0BAA0B,EAC1BC,wBAAwB,QACnB,WAAW;;AAElB;AACA,SACEC,WAAW,IAAIC,cAAc,EAC7BC,aAAa,IAAIC,gBAAgB,QAC5B,iBAAiB;;AAExB;AACA,SACEC,uBAAuB,EACvBC,qBAAqB,QAChB,6BAA6B;AAEpC,UAAUL,WAAWA,CAAC;EAAEM,OAAO,EAAEC;AAAa,CAAC,EAAE;EAC/C,IAAI;IACF,MAAMC,QAAsB,GAAG,MAAMZ,IAAI,CAACK,cAAc,EAAEM,OAAO,CAAC;IAClE,MAAMb,GAAG,CACPI,0BAA0B,CAACD,mBAAmB,CAACY,YAAY,EAAED,QAAQ,CACvE,CAAC;EACH,CAAC,CAAC,OAAOE,KAAU,EAAE;IACnB,MAAMhB,GAAG,CACPK,wBAAwB,CAACF,mBAAmB,CAACY,YAAY,EAAEC,KAAK,CAClE,CAAC;EACH;AACF;AAEA,UAAUR,aAAaA,CAAC;EAAEI,OAAO,EAAEK;AAAc,CAAC,EAAE;EAClD,IAAI;IACF,MAAMH,QAAsB,GAAG,MAAMZ,IAAI,CAACO,gBAAgB,EAAEQ,QAAQ,CAAC;IACrE,MAAMjB,GAAG,CACPI,0BAA0B,CAACD,mBAAmB,CAACe,cAAc,EAAEJ,QAAQ,CACzE,CAAC;IACD,MAAMZ,IAAI,CAACQ,uBAAuB,EAAES,IAAI,CAACC,KAAK,CAACD,IAAI,CAACE,SAAS,CAACP,QAAQ,CAAC,CAAC,CAACQ,OAAO,GAAG,EAAE,CAAC;EACxF,CAAC,CAAC,OAAON,KAAU,EAAE;IACnB,MAAMd,IAAI,CAACS,qBAAqB,EAAEK,KAAK,CAAC;IACxC,MAAMhB,GAAG,CACPK,wBAAwB,CAACF,mBAAmB,CAACe,cAAc,EAAEF,KAAK,CACpE,CAAC;EACH;AACF;AAEA,OAAO,UAAUO,gBAAgBA,CAAA,EAAG;EAClC,MAAMzB,SAAS,CAACK,mBAAmB,CAACY,YAAY,EAAET,WAAW,CAAC;AAChE;AAEA,OAAO,UAAUkB,kBAAkBA,CAAA,EAAG;EACpC,MAAM1B,SAAS,CAACK,mBAAmB,CAACe,cAAc,EAAEV,aAAa,CAAC;AACpE;AAEA,UAAUiB,YAAYA,CAAA,EAAG;EACvB,MAAMxB,GAAG,CAAC,CAACF,IAAI,CAACwB,gBAAgB,CAAC,EAAExB,IAAI,CAACyB,kBAAkB,CAAC,CAAC,CAAC;AAC/D;AAEA,eAAeC,YAAY"},"metadata":{},"sourceType":"module"}