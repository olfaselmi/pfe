{"ast":null,"code":"// types\nimport { BookmarksActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  bookmarks: []\n};\nconst Bookmarks = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case BookmarksActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            bookmarks: action.payload.data,\n            isBookmarksFetched: true,\n            getBookmarksLoading: false,\n            isBookmarkUpdated: false,\n            isBookmarkDeleted: false\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: true\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: true\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case BookmarksActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            isBookmarksFetched: false,\n            getBookmarksLoading: false\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: false,\n            error: action.payload.error\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: false,\n            error: action.payload.error\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case BookmarksActionTypes.GET_BOOKMARKS:\n      {\n        return {\n          ...state,\n          getBookmarksLoading: true,\n          isBookmarksFetched: false\n        };\n      }\n    case BookmarksActionTypes.UPDATE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkUpdated: false\n      };\n    case BookmarksActionTypes.DELETE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkDeleted: false\n      };\n    case BookmarksActionTypes.RESET_BOOKMARKS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags = {};\n      flags[flag] = value;\n      return {\n        ...state,\n        ...flags\n      };\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = Bookmarks;\nexport default Bookmarks;\nvar _c;\n$RefreshReg$(_c, \"Bookmarks\");","map":{"version":3,"names":["BookmarksActionTypes","INIT_STATE","bookmarks","Bookmarks","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_BOOKMARKS","data","isBookmarksFetched","getBookmarksLoading","isBookmarkUpdated","isBookmarkDeleted","UPDATE_BOOKMARK","DELETE_BOOKMARK","API_RESPONSE_ERROR","error","RESET_BOOKMARKS","flag","value","flags","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/bookmarks/reducer.ts"],"sourcesContent":["// types\nimport { BookmarksActionTypes, BookmarksState } from \"./types\";\n\nexport const INIT_STATE: BookmarksState = {\n  bookmarks: [],\n};\n\nconst Bookmarks = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case BookmarksActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            bookmarks: action.payload.data,\n            isBookmarksFetched: true,\n            getBookmarksLoading: false,\n            isBookmarkUpdated: false,\n            isBookmarkDeleted: false,\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: true,\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: true,\n          };\n        default:\n          return { ...state };\n      }\n\n    case BookmarksActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case BookmarksActionTypes.GET_BOOKMARKS:\n          return {\n            ...state,\n            isBookmarksFetched: false,\n            getBookmarksLoading: false,\n          };\n        case BookmarksActionTypes.UPDATE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkUpdated: false,\n            error: action.payload.error,\n          };\n        case BookmarksActionTypes.DELETE_BOOKMARK:\n          return {\n            ...state,\n            isBookmarkDeleted: false,\n            error: action.payload.error,\n          };\n        default:\n          return { ...state };\n      }\n\n    case BookmarksActionTypes.GET_BOOKMARKS: {\n      return {\n        ...state,\n        getBookmarksLoading: true,\n        isBookmarksFetched: false,\n      };\n    }\n    case BookmarksActionTypes.UPDATE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkUpdated: false,\n      };\n    case BookmarksActionTypes.DELETE_BOOKMARK:\n      return {\n        ...state,\n        isBookmarkDeleted: false,\n      };\n    case BookmarksActionTypes.RESET_BOOKMARKS:\n      const flag = action.payload.flag;\n      const value = action.payload.value;\n      let flags: any = {};\n      flags[flag] = value;\n      return {\n        ...state,\n        ...flags,\n      };\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Bookmarks;\n"],"mappings":"AAAA;AACA,SAASA,oBAAoB,QAAwB,SAAS;AAE9D,OAAO,MAAMC,UAA0B,GAAG;EACxCC,SAAS,EAAE;AACb,CAAC;AAED,MAAMC,SAAS,GAAGA,CAACC,KAAK,GAAGH,UAAU,EAAEI,MAAW,KAAK;EACrD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,oBAAoB,CAACO,oBAAoB;MAC5C,QAAQF,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKT,oBAAoB,CAACU,aAAa;UACrC,OAAO;YACL,GAAGN,KAAK;YACRF,SAAS,EAAEG,MAAM,CAACG,OAAO,CAACG,IAAI;YAC9BC,kBAAkB,EAAE,IAAI;YACxBC,mBAAmB,EAAE,KAAK;YAC1BC,iBAAiB,EAAE,KAAK;YACxBC,iBAAiB,EAAE;UACrB,CAAC;QACH,KAAKf,oBAAoB,CAACgB,eAAe;UACvC,OAAO;YACL,GAAGZ,KAAK;YACRU,iBAAiB,EAAE;UACrB,CAAC;QACH,KAAKd,oBAAoB,CAACiB,eAAe;UACvC,OAAO;YACL,GAAGb,KAAK;YACRW,iBAAiB,EAAE;UACrB,CAAC;QACH;UACE,OAAO;YAAE,GAAGX;UAAM,CAAC;MACvB;IAEF,KAAKJ,oBAAoB,CAACkB,kBAAkB;MAC1C,QAAQb,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKT,oBAAoB,CAACU,aAAa;UACrC,OAAO;YACL,GAAGN,KAAK;YACRQ,kBAAkB,EAAE,KAAK;YACzBC,mBAAmB,EAAE;UACvB,CAAC;QACH,KAAKb,oBAAoB,CAACgB,eAAe;UACvC,OAAO;YACL,GAAGZ,KAAK;YACRU,iBAAiB,EAAE,KAAK;YACxBK,KAAK,EAAEd,MAAM,CAACG,OAAO,CAACW;UACxB,CAAC;QACH,KAAKnB,oBAAoB,CAACiB,eAAe;UACvC,OAAO;YACL,GAAGb,KAAK;YACRW,iBAAiB,EAAE,KAAK;YACxBI,KAAK,EAAEd,MAAM,CAACG,OAAO,CAACW;UACxB,CAAC;QACH;UACE,OAAO;YAAE,GAAGf;UAAM,CAAC;MACvB;IAEF,KAAKJ,oBAAoB,CAACU,aAAa;MAAE;QACvC,OAAO;UACL,GAAGN,KAAK;UACRS,mBAAmB,EAAE,IAAI;UACzBD,kBAAkB,EAAE;QACtB,CAAC;MACH;IACA,KAAKZ,oBAAoB,CAACgB,eAAe;MACvC,OAAO;QACL,GAAGZ,KAAK;QACRU,iBAAiB,EAAE;MACrB,CAAC;IACH,KAAKd,oBAAoB,CAACiB,eAAe;MACvC,OAAO;QACL,GAAGb,KAAK;QACRW,iBAAiB,EAAE;MACrB,CAAC;IACH,KAAKf,oBAAoB,CAACoB,eAAe;MACvC,MAAMC,IAAI,GAAGhB,MAAM,CAACG,OAAO,CAACa,IAAI;MAChC,MAAMC,KAAK,GAAGjB,MAAM,CAACG,OAAO,CAACc,KAAK;MAClC,IAAIC,KAAU,GAAG,CAAC,CAAC;MACnBA,KAAK,CAACF,IAAI,CAAC,GAAGC,KAAK;MACnB,OAAO;QACL,GAAGlB,KAAK;QACR,GAAGmB;MACL,CAAC;IAEH;MACE,OAAO;QAAE,GAAGnB;MAAM,CAAC;EACvB;AACF,CAAC;AAACoB,EAAA,GAjFIrB,SAAS;AAmFf,eAAeA,SAAS;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}