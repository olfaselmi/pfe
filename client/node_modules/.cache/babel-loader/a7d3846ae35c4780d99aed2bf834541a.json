{"ast":null,"code":"var _jsxFileName = \"/home/olfa/Documents/pfe-main/client/src/pages/Dashboard/ConversationUser/Conversation.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useRef, useCallback, useState } from \"react\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// hooks\nimport { useProfile } from \"../../../hooks\";\n\n// components\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport Loader from \"../../../components/Loader\";\nimport Message from \"./Message\";\n// import Day from \"./Day\";\n\n// interface\nimport ForwardModal from \"../../../components/ForwardModal\";\n\n// actions\nimport { forwardMessage, deleteImage } from \"../../../redux/actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Conversation = ({\n  chatUserDetails,\n  chatUserConversations,\n  onDelete,\n  onSetReplyData,\n  isChannel,\n  messagesList,\n  isTyping\n}) => {\n  _s();\n  // global store\n  const {\n    dispatch,\n    useAppSelector\n  } = useRedux();\n  const {\n    userProfile\n  } = useProfile();\n  const {\n    getUserConversationsLoading,\n    isMessageForwarded\n  } = useAppSelector(state => ({\n    getUserConversationsLoading: state.Chats.getUserConversationsLoading,\n    isMessageForwarded: state.Chats.isMessageForwarded\n  }));\n\n  // const messages =\n  //   chatUserConversations.isChannel && chatUserConversations.isChannel.length\n  //     ? chatUserConversations.isChannel\n  //     : [];\n\n  const ref = useRef();\n  const scrollElement = useCallback(() => {\n    if (ref && ref.current) {\n      const listEle = document.getElementById(\"chat-conversation-list\");\n      let offsetHeight = 0;\n      if (listEle) {\n        offsetHeight = listEle.scrollHeight - window.innerHeight + 250;\n      }\n      if (offsetHeight) {\n        ref.current.getScrollElement().scrollTo({\n          top: offsetHeight,\n          behavior: \"smooth\"\n        });\n      }\n    }\n  }, [ref]);\n  useEffect(() => {\n    // setMessages(\n    //   chatUserConversations.messages && chatUserConversations.messages.length\n    //     ? chatUserConversations.messages\n    //     : []\n    // );\n\n    if (ref && ref.current) {\n      ref.current.recalculate();\n    }\n  }, []);\n  useEffect(() => {\n    if (chatUserConversations.messages) {\n      scrollElement();\n    }\n  }, [chatUserConversations.messages, scrollElement]);\n\n  /*\n  forward message\n  */\n  const [forwardData, setForwardData] = useState();\n  const [isOpenForward, setIsOpenForward] = useState(false);\n  const onOpenForward = message => {\n    setForwardData(message);\n    setIsOpenForward(true);\n  };\n  const onCloseForward = () => {\n    setIsOpenForward(false);\n  };\n  const onForwardMessage = data => {\n    const params = {\n      contacts: data.contacts,\n      message: data.message,\n      forwardedMessage: forwardData\n    };\n    dispatch(forwardMessage(params));\n  };\n  useEffect(() => {\n    if (isMessageForwarded) {\n      setIsOpenForward(false);\n    }\n  }, [isMessageForwarded]);\n\n  /*\n  image delete\n  */\n  const onDeleteImage = (messageId, imageId) => {\n    dispatch(deleteImage(chatUserDetails.id, messageId, imageId));\n  };\n  return /*#__PURE__*/_jsxDEV(AppSimpleBar, {\n    scrollRef: ref,\n    className: \"chat-conversation p-3 p-lg-4 positin-relative\",\n    children: [getUserConversationsLoading && /*#__PURE__*/_jsxDEV(Loader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 39\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-unstyled chat-conversation-list\",\n      id: \"chat-conversation-list\",\n      children: (messagesList || []).map((message, key) => {\n        const isFromMe = message.meta.sender === userProfile.user.id;\n        return /*#__PURE__*/_jsxDEV(Message, {\n          message: message,\n          chatUserDetails: chatUserDetails,\n          onDelete: onDelete,\n          onSetReplyData: onSetReplyData,\n          isFromMe: isFromMe,\n          onOpenForward: onOpenForward,\n          isChannel: isChannel,\n          onDeleteImage: onDeleteImage\n        }, key, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), isOpenForward && /*#__PURE__*/_jsxDEV(ForwardModal, {\n      isOpen: isOpenForward,\n      onClose: onCloseForward,\n      forwardData: forwardData,\n      chatUserDetails: chatUserDetails,\n      onForward: onForwardMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 9\n    }, this), isTyping ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"is typing ...\"\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 5\n  }, this);\n};\n_s(Conversation, \"JSM18KrQaajnDRrbn6qUAh+VJAo=\", true, function () {\n  return [useRedux, useProfile];\n});\n_c = Conversation;\nexport default Conversation;\nvar _c;\n$RefreshReg$(_c, \"Conversation\");","map":{"version":3,"names":["React","useEffect","useRef","useCallback","useState","useRedux","useProfile","AppSimpleBar","Loader","Message","ForwardModal","forwardMessage","deleteImage","jsxDEV","_jsxDEV","Fragment","_Fragment","Conversation","chatUserDetails","chatUserConversations","onDelete","onSetReplyData","isChannel","messagesList","isTyping","_s","dispatch","useAppSelector","userProfile","getUserConversationsLoading","isMessageForwarded","state","Chats","ref","scrollElement","current","listEle","document","getElementById","offsetHeight","scrollHeight","window","innerHeight","getScrollElement","scrollTo","top","behavior","recalculate","messages","forwardData","setForwardData","isOpenForward","setIsOpenForward","onOpenForward","message","onCloseForward","onForwardMessage","data","params","contacts","forwardedMessage","onDeleteImage","messageId","imageId","id","scrollRef","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","key","isFromMe","meta","sender","user","isOpen","onClose","onForward","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/pages/Dashboard/ConversationUser/Conversation.tsx"],"sourcesContent":["import React, { useEffect, useRef, useCallback, useState } from \"react\";\n\n// hooks\nimport { useRedux } from \"../../../hooks/index\";\n\n// hooks\nimport { useProfile } from \"../../../hooks\";\n\n// components\nimport AppSimpleBar from \"../../../components/AppSimpleBar\";\nimport Loader from \"../../../components/Loader\";\nimport Message from \"./Message\";\n// import Day from \"./Day\";\n\n// interface\nimport { MessagesTypes } from \"../../../data/messages\";\nimport ForwardModal from \"../../../components/ForwardModal\";\n\n// actions\nimport { forwardMessage, deleteImage } from \"../../../redux/actions\";\nimport { io } from \"socket.io-client\";\n\ninterface ConversationProps {\n  chatUserConversations: any;\n  chatUserDetails: any;\n  onDelete: (messageId: string | number) => any;\n  onSetReplyData: (reply: null | MessagesTypes | undefined) => void;\n  isChannel: boolean;\n  messagesList: any;\n  isTyping: any;\n}\nconst Conversation = ({\n  chatUserDetails,\n  chatUserConversations,\n  onDelete,\n  onSetReplyData,\n  isChannel,\n  messagesList,\n  isTyping,\n}: ConversationProps) => {\n  // global store\n  const { dispatch, useAppSelector } = useRedux();\n\n  const { userProfile } = useProfile();\n\n  const { getUserConversationsLoading, isMessageForwarded } = useAppSelector(\n    (state: any) => ({\n      getUserConversationsLoading: state.Chats.getUserConversationsLoading,\n      isMessageForwarded: state.Chats.isMessageForwarded,\n    })\n  );\n\n  // const messages =\n  //   chatUserConversations.isChannel && chatUserConversations.isChannel.length\n  //     ? chatUserConversations.isChannel\n  //     : [];\n\n  const ref = useRef<any>();\n  const scrollElement = useCallback(() => {\n    if (ref && ref.current) {\n      const listEle = document.getElementById(\"chat-conversation-list\");\n      let offsetHeight = 0;\n      if (listEle) {\n        offsetHeight = listEle.scrollHeight - window.innerHeight + 250;\n      }\n      if (offsetHeight) {\n        ref.current\n          .getScrollElement()\n          .scrollTo({ top: offsetHeight, behavior: \"smooth\" });\n      }\n    }\n  }, [ref]);\n\n  useEffect(() => {\n    // setMessages(\n    //   chatUserConversations.messages && chatUserConversations.messages.length\n    //     ? chatUserConversations.messages\n    //     : []\n    // );\n\n    if (ref && ref.current) {\n      ref.current.recalculate();\n    }\n  }, []);\n\n  useEffect(() => {\n    if (chatUserConversations.messages) {\n      scrollElement();\n    }\n  }, [chatUserConversations.messages, scrollElement]);\n\n  /*\n  forward message\n  */\n  const [forwardData, setForwardData] = useState<\n    null | MessagesTypes | undefined\n  >();\n  const [isOpenForward, setIsOpenForward] = useState<boolean>(false);\n  const onOpenForward = (message: MessagesTypes) => {\n    setForwardData(message);\n    setIsOpenForward(true);\n  };\n  const onCloseForward = () => {\n    setIsOpenForward(false);\n  };\n\n  const onForwardMessage = (data: any) => {\n    const params = {\n      contacts: data.contacts,\n      message: data.message,\n      forwardedMessage: forwardData,\n    };\n    dispatch(forwardMessage(params));\n  };\n  useEffect(() => {\n    if (isMessageForwarded) {\n      setIsOpenForward(false);\n    }\n  }, [isMessageForwarded]);\n\n  /*\n  image delete\n  */\n  const onDeleteImage = (\n    messageId: string | number,\n    imageId: string | number\n  ) => {\n    dispatch(deleteImage(chatUserDetails.id, messageId, imageId));\n  };\n  return (\n    <AppSimpleBar\n      scrollRef={ref}\n      className=\"chat-conversation p-3 p-lg-4 positin-relative\"\n    >\n      {getUserConversationsLoading && <Loader />}\n      <ul\n        className=\"list-unstyled chat-conversation-list\"\n        id=\"chat-conversation-list\"\n      >\n        {(messagesList || []).map((message: MessagesTypes, key: number) => {\n          const isFromMe = message.meta.sender === userProfile.user.id;\n          return (\n            <Message\n              message={message}\n              key={key}\n              chatUserDetails={chatUserDetails}\n              onDelete={onDelete}\n              onSetReplyData={onSetReplyData}\n              isFromMe={isFromMe}\n              onOpenForward={onOpenForward}\n              isChannel={isChannel}\n              onDeleteImage={onDeleteImage}\n            />\n          );\n        })}\n        {/*  <Day /> */}\n      </ul>\n      {isOpenForward && (\n        <ForwardModal\n          isOpen={isOpenForward}\n          onClose={onCloseForward}\n          forwardData={forwardData}\n          chatUserDetails={chatUserDetails}\n          onForward={onForwardMessage}\n        />\n      )}\n      {isTyping ? <>is typing ...</> : <></>}\n    </AppSimpleBar>\n  );\n};\n\nexport default Conversation;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}