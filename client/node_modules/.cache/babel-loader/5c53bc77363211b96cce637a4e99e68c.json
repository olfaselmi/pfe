{"ast":null,"code":"import { AuthForgetPassActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  forgetSuccessMsg: null,\n  forgetError: null\n};\nconst ForgetPassword = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case AuthForgetPassActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case AuthForgetPassActionTypes.FORGET_PASSWORD:\n          return {\n            ...state,\n            forgetSuccessMsg: action.payload.data,\n            emailSended: true,\n            loading: false\n          };\n        case AuthForgetPassActionTypes.CHANGE_PASSWORD:\n          {\n            return {\n              ...state,\n              passwordChanged: true,\n              loading: false\n            };\n          }\n        default:\n          return {\n            ...state\n          };\n      }\n    case AuthForgetPassActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case AuthForgetPassActionTypes.FORGET_PASSWORD:\n          return {\n            ...state,\n            forgetError: action.payload.error,\n            emailSended: false,\n            loading: false\n          };\n        case AuthForgetPassActionTypes.CHANGE_PASSWORD:\n          {\n            return {\n              ...state,\n              changepasswordError: action.payload.error,\n              passwordChanged: false,\n              loading: true\n            };\n          }\n        default:\n          return {\n            ...state\n          };\n      }\n    case AuthForgetPassActionTypes.FORGET_PASSWORD:\n      {\n        return {\n          ...state,\n          forgetSuccessMsg: null,\n          forgetError: null,\n          emailSended: false,\n          loading: true\n        };\n      }\n    case AuthForgetPassActionTypes.CHANGE_PASSWORD:\n      {\n        return {\n          ...state,\n          passwordChanged: false,\n          loading: true\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = ForgetPassword;\nexport default ForgetPassword;\nvar _c;\n$RefreshReg$(_c, \"ForgetPassword\");","map":{"version":3,"names":["AuthForgetPassActionTypes","INIT_STATE","forgetSuccessMsg","forgetError","ForgetPassword","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","FORGET_PASSWORD","data","emailSended","loading","CHANGE_PASSWORD","passwordChanged","API_RESPONSE_ERROR","error","changepasswordError","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/auth/forgetpwd/reducer.ts"],"sourcesContent":["import { AuthForgetPassActionTypes, AuthForgetPassState } from \"./types\";\n\nexport const INIT_STATE: AuthForgetPassState = {\n  forgetSuccessMsg: null,\n  forgetError: null,\n};\n\nconst ForgetPassword = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case AuthForgetPassActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case AuthForgetPassActionTypes.FORGET_PASSWORD:\n          return {\n            ...state,\n            forgetSuccessMsg: action.payload.data,\n            emailSended: true,\n            loading: false,\n          };\n        case AuthForgetPassActionTypes.CHANGE_PASSWORD: {\n          return {\n            ...state,\n            passwordChanged: true,\n            loading: false,\n          };\n        }\n        default:\n          return { ...state };\n      }\n\n    case AuthForgetPassActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case AuthForgetPassActionTypes.FORGET_PASSWORD:\n          return {\n            ...state,\n            forgetError: action.payload.error,\n            emailSended: false,\n            loading: false,\n          };\n        case AuthForgetPassActionTypes.CHANGE_PASSWORD: {\n          return {\n            ...state,\n            changepasswordError: action.payload.error,\n            passwordChanged: false,\n            loading: true,\n          };\n        }\n\n        default:\n          return { ...state };\n      }\n\n    case AuthForgetPassActionTypes.FORGET_PASSWORD: {\n      return {\n        ...state,\n        forgetSuccessMsg: null,\n        forgetError: null,\n        emailSended: false,\n        loading: true,\n      };\n    }\n    case AuthForgetPassActionTypes.CHANGE_PASSWORD: {\n      return {\n        ...state,\n        passwordChanged: false,\n        loading: true,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default ForgetPassword;\n"],"mappings":"AAAA,SAASA,yBAAyB,QAA6B,SAAS;AAExE,OAAO,MAAMC,UAA+B,GAAG;EAC7CC,gBAAgB,EAAE,IAAI;EACtBC,WAAW,EAAE;AACf,CAAC;AAED,MAAMC,cAAc,GAAGA,CAACC,KAAK,GAAGJ,UAAU,EAAEK,MAAW,KAAK;EAC1D,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKP,yBAAyB,CAACQ,oBAAoB;MACjD,QAAQF,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKV,yBAAyB,CAACW,eAAe;UAC5C,OAAO;YACL,GAAGN,KAAK;YACRH,gBAAgB,EAAEI,MAAM,CAACG,OAAO,CAACG,IAAI;YACrCC,WAAW,EAAE,IAAI;YACjBC,OAAO,EAAE;UACX,CAAC;QACH,KAAKd,yBAAyB,CAACe,eAAe;UAAE;YAC9C,OAAO;cACL,GAAGV,KAAK;cACRW,eAAe,EAAE,IAAI;cACrBF,OAAO,EAAE;YACX,CAAC;UACH;QACA;UACE,OAAO;YAAE,GAAGT;UAAM,CAAC;MACvB;IAEF,KAAKL,yBAAyB,CAACiB,kBAAkB;MAC/C,QAAQX,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKV,yBAAyB,CAACW,eAAe;UAC5C,OAAO;YACL,GAAGN,KAAK;YACRF,WAAW,EAAEG,MAAM,CAACG,OAAO,CAACS,KAAK;YACjCL,WAAW,EAAE,KAAK;YAClBC,OAAO,EAAE;UACX,CAAC;QACH,KAAKd,yBAAyB,CAACe,eAAe;UAAE;YAC9C,OAAO;cACL,GAAGV,KAAK;cACRc,mBAAmB,EAAEb,MAAM,CAACG,OAAO,CAACS,KAAK;cACzCF,eAAe,EAAE,KAAK;cACtBF,OAAO,EAAE;YACX,CAAC;UACH;QAEA;UACE,OAAO;YAAE,GAAGT;UAAM,CAAC;MACvB;IAEF,KAAKL,yBAAyB,CAACW,eAAe;MAAE;QAC9C,OAAO;UACL,GAAGN,KAAK;UACRH,gBAAgB,EAAE,IAAI;UACtBC,WAAW,EAAE,IAAI;UACjBU,WAAW,EAAE,KAAK;UAClBC,OAAO,EAAE;QACX,CAAC;MACH;IACA,KAAKd,yBAAyB,CAACe,eAAe;MAAE;QAC9C,OAAO;UACL,GAAGV,KAAK;UACRW,eAAe,EAAE,KAAK;UACtBF,OAAO,EAAE;QACX,CAAC;MACH;IAEA;MACE,OAAO;QAAE,GAAGT;MAAM,CAAC;EACvB;AACF,CAAC;AAACe,EAAA,GAhEIhB,cAAc;AAkEpB,eAAeA,cAAc;AAAC,IAAAgB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}