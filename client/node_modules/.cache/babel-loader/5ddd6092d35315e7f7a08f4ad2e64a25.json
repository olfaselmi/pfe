{"ast":null,"code":"import axios from \"axios\";\nimport config from \"../config\";\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// intercepting to capture errors\naxios.interceptors.response.use(function (response) {\n  return response.data ? response.data : response;\n}, function (error) {\n  // Any status codes that falls outside the range of 2xx cause this function to trigger\n  let message;\n  switch (error.status) {\n    case 500:\n      message = \"Internal Server Error\";\n      break;\n    case 401:\n      message = \"Invalid credentials\";\n      break;\n    case 404:\n      message = \"Sorry! the data you are looking for could not be found\";\n      break;\n    default:\n      message = error.message || error;\n  }\n  return Promise.reject(message);\n});\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = token => {\n  axios.defaults.headers.common[\"x-auth-token\"] = token;\n};\nclass APIClient {\n  constructor() {\n    /**\n     * Fetches data from given url\n     */\n    this.get = (url, params) => {\n      const token = localStorage.getItem(\"authUser\");\n      setAuthorization(JSON.parse(token).token);\n      return axios.get(url, params);\n    };\n    /**\n     * post given data to url\n     */\n    this.create = (url, data) => {\n      return axios.post(url, data);\n    };\n    /**\n     * Updates data\n     */\n    this.update = (url, data) => {\n      return axios.put(url, data);\n    };\n    /**\n     * Delete\n     */\n    this.delete = (url, config) => {\n      return axios.delete(url, {\n        ...config\n      });\n    };\n    /*\n     file upload update method\n     */\n    this.updateWithFile = (url, data) => {\n      const formData = new FormData();\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n      const config = {\n        headers: {\n          ...axios.defaults.headers,\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      return axios.put(url, formData, config);\n    };\n    /*\n     file upload post method\n     */\n    this.createWithFile = (url, data) => {\n      const formData = new FormData();\n      for (const k in data) {\n        formData.append(k, data[k]);\n      }\n      const config = {\n        headers: {\n          ...axios.defaults.headers,\n          \"content-type\": \"multipart/form-data\"\n        }\n      };\n      return axios.post(url, formData, config);\n    };\n  }\n}\nconst getLoggedinUser = () => {\n  const user = localStorage.getItem(\"authUser\");\n  if (!user) {\n    return null;\n  } else {\n    return JSON.parse(user);\n  }\n};\nexport { APIClient, setAuthorization, getLoggedinUser };","map":{"version":3,"names":["axios","config","defaults","baseURL","API_URL","headers","post","interceptors","response","use","data","error","message","status","Promise","reject","setAuthorization","token","common","APIClient","constructor","get","url","params","localStorage","getItem","JSON","parse","create","update","put","delete","updateWithFile","formData","FormData","k","append","createWithFile","getLoggedinUser","user"],"sources":["/home/olfa/Documents/pfe-main/client/src/api/apiCore.ts"],"sourcesContent":["import axios from \"axios\";\nimport config from \"../config\";\n\n// default\naxios.defaults.baseURL = config.API_URL;\n\n// content type\naxios.defaults.headers.post[\"Content-Type\"] = \"application/json\";\n\n// intercepting to capture errors\naxios.interceptors.response.use(\n  function (response: any) {\n    return response.data ? response.data : response;\n  },\n  function (error: any) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    let message;\n    switch (error.status) {\n      case 500:\n        message = \"Internal Server Error\";\n        break;\n      case 401:\n        message = \"Invalid credentials\";\n        break;\n      case 404:\n        message = \"Sorry! the data you are looking for could not be found\";\n        break;\n      default:\n        message = error.message || error;\n    }\n    return Promise.reject(message);\n  }\n);\n\n/**\n * Sets the default authorization\n * @param {*} token\n */\nconst setAuthorization = (token: any) => {\n  axios.defaults.headers.common[\"x-auth-token\"] = token;\n};\n\nclass APIClient {\n  /**\n   * Fetches data from given url\n   */\n  get = (url: string, params?: {}) => {\n    const token :  any = localStorage.getItem(\"authUser\");\n    setAuthorization(JSON.parse(token).token)\n    return axios.get(url, params);\n  };\n\n  /**\n   * post given data to url\n   */\n  create = (url: string, data?: {}) => {\n    return axios.post(url, data);\n  };\n\n  /**\n   * Updates data\n   */\n  update = (url: string, data?: {}) => {\n    return axios.put(url, data);\n  };\n\n  /**\n   * Delete\n   */\n  delete = (url: string, config?: {}) => {\n    return axios.delete(url, { ...config });\n  };\n\n  /*\n   file upload update method\n   */\n  updateWithFile = (url: string, data: any) => {\n    const formData = new FormData();\n    for (const k in data) {\n      formData.append(k, data[k]);\n    }\n    const config = {\n      headers: {\n        ...axios.defaults.headers,\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    return axios.put(url, formData, config);\n  };\n\n  /*\n   file upload post method\n   */\n  createWithFile = (url: string, data: any) => {\n    const formData = new FormData();\n    for (const k in data) {\n      formData.append(k, data[k]);\n    }\n    const config = {\n      headers: {\n        ...axios.defaults.headers,\n        \"content-type\": \"multipart/form-data\",\n      },\n    };\n    return axios.post(url, formData, config);\n  };\n}\n\nconst getLoggedinUser = () => {\n  const user = localStorage.getItem(\"authUser\");\n  if (!user) {\n    return null;\n  } else {\n    return JSON.parse(user);\n  }\n};\n\nexport { APIClient, setAuthorization, getLoggedinUser };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}