{"ast":null,"code":"// types\nimport { CallsActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  calls: []\n};\nconst Calls = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case CallsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            calls: action.payload.data,\n            isCallsFetched: true,\n            getCallsLoading: false\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case CallsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            isCallsFetched: false,\n            getCallsLoading: false\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case CallsActionTypes.GET_CALLS:\n      {\n        return {\n          ...state,\n          getCallsLoading: true,\n          isCallsFetched: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = Calls;\nexport default Calls;\nvar _c;\n$RefreshReg$(_c, \"Calls\");","map":{"version":3,"names":["CallsActionTypes","INIT_STATE","calls","Calls","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","GET_CALLS","data","isCallsFetched","getCallsLoading","API_RESPONSE_ERROR","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/calls/reducer.ts"],"sourcesContent":["// types\nimport { CallsActionTypes, CallsState } from \"./types\";\n\nexport const INIT_STATE: CallsState = {\n  calls: [],\n};\n\nconst Calls = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case CallsActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            calls: action.payload.data,\n            isCallsFetched: true,\n            getCallsLoading: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case CallsActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case CallsActionTypes.GET_CALLS:\n          return {\n            ...state,\n            isCallsFetched: false,\n            getCallsLoading: false,\n          };\n\n        default:\n          return { ...state };\n      }\n\n    case CallsActionTypes.GET_CALLS: {\n      return {\n        ...state,\n        getCallsLoading: true,\n        isCallsFetched: false,\n      };\n    }\n\n    default:\n      return { ...state };\n  }\n};\n\nexport default Calls;\n"],"mappings":"AAAA;AACA,SAASA,gBAAgB,QAAoB,SAAS;AAEtD,OAAO,MAAMC,UAAsB,GAAG;EACpCC,KAAK,EAAE;AACT,CAAC;AAED,MAAMC,KAAK,GAAGA,CAACC,KAAK,GAAGH,UAAU,EAAEI,MAAW,KAAK;EACjD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKN,gBAAgB,CAACO,oBAAoB;MACxC,QAAQF,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKT,gBAAgB,CAACU,SAAS;UAC7B,OAAO;YACL,GAAGN,KAAK;YACRF,KAAK,EAAEG,MAAM,CAACG,OAAO,CAACG,IAAI;YAC1BC,cAAc,EAAE,IAAI;YACpBC,eAAe,EAAE;UACnB,CAAC;QACH;UACE,OAAO;YAAE,GAAGT;UAAM,CAAC;MACvB;IAEF,KAAKJ,gBAAgB,CAACc,kBAAkB;MACtC,QAAQT,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKT,gBAAgB,CAACU,SAAS;UAC7B,OAAO;YACL,GAAGN,KAAK;YACRQ,cAAc,EAAE,KAAK;YACrBC,eAAe,EAAE;UACnB,CAAC;QAEH;UACE,OAAO;YAAE,GAAGT;UAAM,CAAC;MACvB;IAEF,KAAKJ,gBAAgB,CAACU,SAAS;MAAE;QAC/B,OAAO;UACL,GAAGN,KAAK;UACRS,eAAe,EAAE,IAAI;UACrBD,cAAc,EAAE;QAClB,CAAC;MACH;IAEA;MACE,OAAO;QAAE,GAAGR;MAAM,CAAC;EACvB;AACF,CAAC;AAACW,EAAA,GAvCIZ,KAAK;AAyCX,eAAeA,KAAK;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}