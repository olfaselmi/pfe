{"ast":null,"code":"import { AuthRegisterActionTypes } from \"./types\";\nexport const INIT_STATE = {\n  registrationError: null,\n  message: \"\",\n  loading: false,\n  user: null\n};\nconst Register = (state = INIT_STATE, action) => {\n  switch (action.type) {\n    case AuthRegisterActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case AuthRegisterActionTypes.REGISTER_USER:\n          return {\n            ...state,\n            loading: false,\n            user: action.payload.data,\n            registrationError: null,\n            isUserRegistered: true\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case AuthRegisterActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case AuthRegisterActionTypes.REGISTER_USER:\n          return {\n            ...state,\n            loading: false,\n            registrationError: action.payload.error,\n            isUserRegistered: false\n          };\n        default:\n          return {\n            ...state\n          };\n      }\n    case AuthRegisterActionTypes.REGISTER_USER:\n      {\n        return {\n          ...state,\n          loading: true,\n          isUserRegistered: false\n        };\n      }\n    default:\n      return {\n        ...state\n      };\n  }\n};\n_c = Register;\nexport default Register;\nvar _c;\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"names":["AuthRegisterActionTypes","INIT_STATE","registrationError","message","loading","user","Register","state","action","type","API_RESPONSE_SUCCESS","payload","actionType","REGISTER_USER","data","isUserRegistered","API_RESPONSE_ERROR","error","_c","$RefreshReg$"],"sources":["/home/olfa/Documents/pfe-main/client/src/redux/auth/register/reducer.ts"],"sourcesContent":["import { AuthRegisterActionTypes, AuthRegisterState } from \"./types\";\n\nexport const INIT_STATE: AuthRegisterState = {\n  registrationError: null,\n  message: \"\",\n  loading: false,\n  user: null,\n};\n\nconst Register = (state = INIT_STATE, action: any) => {\n  switch (action.type) {\n    case AuthRegisterActionTypes.API_RESPONSE_SUCCESS:\n      switch (action.payload.actionType) {\n        case AuthRegisterActionTypes.REGISTER_USER:\n          return {\n            ...state,\n            loading: false,\n            user: action.payload.data,\n            registrationError: null,\n            isUserRegistered: true,\n          };\n        default:\n          return { ...state };\n      }\n\n    case AuthRegisterActionTypes.API_RESPONSE_ERROR:\n      switch (action.payload.actionType) {\n        case AuthRegisterActionTypes.REGISTER_USER:\n          return {\n            ...state,\n            loading: false,\n            registrationError: action.payload.error,\n            isUserRegistered: false,\n          };\n        default:\n          return { ...state };\n      }\n\n    case AuthRegisterActionTypes.REGISTER_USER: {\n      return {\n        ...state,\n        loading: true,\n        isUserRegistered: false,\n      };\n    }\n    default:\n      return { ...state };\n  }\n};\n\nexport default Register;\n"],"mappings":"AAAA,SAASA,uBAAuB,QAA2B,SAAS;AAEpE,OAAO,MAAMC,UAA6B,GAAG;EAC3CC,iBAAiB,EAAE,IAAI;EACvBC,OAAO,EAAE,EAAE;EACXC,OAAO,EAAE,KAAK;EACdC,IAAI,EAAE;AACR,CAAC;AAED,MAAMC,QAAQ,GAAGA,CAACC,KAAK,GAAGN,UAAU,EAAEO,MAAW,KAAK;EACpD,QAAQA,MAAM,CAACC,IAAI;IACjB,KAAKT,uBAAuB,CAACU,oBAAoB;MAC/C,QAAQF,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKZ,uBAAuB,CAACa,aAAa;UACxC,OAAO;YACL,GAAGN,KAAK;YACRH,OAAO,EAAE,KAAK;YACdC,IAAI,EAAEG,MAAM,CAACG,OAAO,CAACG,IAAI;YACzBZ,iBAAiB,EAAE,IAAI;YACvBa,gBAAgB,EAAE;UACpB,CAAC;QACH;UACE,OAAO;YAAE,GAAGR;UAAM,CAAC;MACvB;IAEF,KAAKP,uBAAuB,CAACgB,kBAAkB;MAC7C,QAAQR,MAAM,CAACG,OAAO,CAACC,UAAU;QAC/B,KAAKZ,uBAAuB,CAACa,aAAa;UACxC,OAAO;YACL,GAAGN,KAAK;YACRH,OAAO,EAAE,KAAK;YACdF,iBAAiB,EAAEM,MAAM,CAACG,OAAO,CAACM,KAAK;YACvCF,gBAAgB,EAAE;UACpB,CAAC;QACH;UACE,OAAO;YAAE,GAAGR;UAAM,CAAC;MACvB;IAEF,KAAKP,uBAAuB,CAACa,aAAa;MAAE;QAC1C,OAAO;UACL,GAAGN,KAAK;UACRH,OAAO,EAAE,IAAI;UACbW,gBAAgB,EAAE;QACpB,CAAC;MACH;IACA;MACE,OAAO;QAAE,GAAGR;MAAM,CAAC;EACvB;AACF,CAAC;AAACW,EAAA,GAvCIZ,QAAQ;AAyCd,eAAeA,QAAQ;AAAC,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module"}